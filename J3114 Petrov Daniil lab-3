#include <iostream>
#include <sstream>
#include <vector>
#include <unordered_set>
#include <random>

using namespace std;

// Функция reservoirSampling (как была описана ранее)
vector<int> reservoirSampling(istream& input, int K) {
    vector<int> reservoir(K);
    unordered_set<int> uniqueElements;
    int count = 0;

    int num;
    while (input >> num) {
        if (uniqueElements.find(num) == uniqueElements.end()) {
            uniqueElements.insert(num);
            if (count < K) {
                reservoir[count] = num;
            } else {
                random_device rd;
                mt19937 gen(rd());
                uniform_int_distribution<> dis(0, count);
                int j = dis(gen);
                if (j < K) {
                    reservoir[j] = num;
                }
            }
            count++;
        }
    }

    return reservoir;
}

// Функция для тестирования
void runTest(const string& input, int K) {
    istringstream iss(input);
    vector<int> sampledArray = reservoirSampling(iss, K);

    cout << "Входные данные: [" << input << "], K = " << K << " => Сэмплированный массив: ";
    for (int num : sampledArray) {
        cout << num << " ";
    }
    cout << endl;
}

int main() {
    // Запуск тестов
    runTest("1 100 10 2", 3);
    runTest("1 1 1 2 2 3 3 4", 3);
    runTest("1 2 3 4 5 6", 3);
    runTest("1 2 3", 5);
    runTest("", 3);
    runTest("42", 1);

    return 0;
}
